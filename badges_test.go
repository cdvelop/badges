package badges

import "testing"

func TestBadgeMarkdown_Default(t *testing.T) {
	// Provide an arg so NewBadgeHandler doesn't return nil
	h := NewBadgeHandler("output_svgfile:docs/img/custom.svg")
	if h == nil {
		t.Fatal("NewBadgeHandler returned nil")
	}
	if err := h.Err(); err != nil {
		t.Fatalf("NewBadgeHandler returned error: %v", err)
	}

	want := `<a href="docs/img/custom.svg"><img src="docs/img/custom.svg" alt="Project Badges" title="Generated by badges package from github.com/cdvelop/devscripts"></a>`
	got := h.BadgeMarkdown()
	if got != want {
		t.Fatalf("unexpected markdown:\n got: %s\nwant: %s", got, want)
	}
}

func TestBadgeMarkdown_DefaultHandlerValue(t *testing.T) {
	// When created with no special args the default outputFile should be used
	h := NewBadgeHandler("dummy")
	if h == nil {
		t.Fatal("NewBadgeHandler returned nil")
	}
	if err := h.Err(); err != nil {
		t.Fatalf("NewBadgeHandler returned error: %v", err)
	}

	want := `<a href="docs/img/badges.svg"><img src="docs/img/badges.svg" alt="Project Badges" title="Generated by badges package from github.com/cdvelop/devscripts"></a>`
	got := h.BadgeMarkdown()
	if got != want {
		t.Fatalf("unexpected markdown:\n got: %s\nwant: %s", got, want)
	}
}
